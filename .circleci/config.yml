version: 2.1

orbs:
  win: circleci/windows@2.2.0


jobs:
  
  test-linux: &full-test-template
    docker:
      - image: circleci/python:3.6-jessie
      
    working_directory: ~/repo

    steps:

      - checkout

      - run:
          name: install cmake 3.11
          command: |
            
            sudo apt-get install build-essential
            wget http://www.cmake.org/files/v3.11/cmake-3.11.4.tar.gz
            tar xf cmake-3.11.4.tar.gz
            cd cmake-3.11.4
            ./configure
            make
            sudo make install
            cmake --version
      
      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env
      
      - run: &install-dependencies-template
          name: install dependencies
          command: |
            . env/bin/activate 
            python --version
            pip install -r requirements.txt
  
      - run: &install-package-template
          name: install package
          command: |
            . env/bin/activate
            python setup.py install

      - run: &run-tests-template
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            coverage run -m unittest discover
  
  test-linux2:
    docker:
      - image: rikorose/gcc-cmake
    environment:
      PYENV_ROOT: /tmp/.pyenv
      
    working_directory: ~/repo

    steps:

      - checkout

      - run:
          name: set environment variables
          command: |
            echo $BASH_ENV
            echo 'export PATH=$PYENV_ROOT/bin:$PATH' >> $BASH_ENV
            
      
      - run:
          name: install pyenv
          command: |
            git clone https://github.com/pyenv/pyenv.git $PYENV_ROOT
            #chown -R $USER:$USER $PYENV_ROOT
            #eval "$(pyenv init -)"
            echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi' >> ~/.bash_profile
            echo "echo read_bash_profile" >> ~/.bash_profile
            source ~/.bash_profile
            ls $PYENV_ROOT/bin
      

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-linux
      
      - run:
          name: install python
          command: |
            pyenv install 3.6.5
            pyenv local 3.6.5
      
      - save_cache:
          paths:
            - $PYENV_ROOT
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode11.2.1
      
      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            python -V
            python -m pip install virtualenv
            python -m virtualenv env

      - run: &install-dependencies-template
          name: install dependencies
          command: |
            . env/bin/activate 
            python --version
            pip install -r requirements.txt
  
      - run: &install-package-template
          name: install package
          command: |
            . env/bin/activate
            python setup.py install

      - run: &run-tests-template
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            coverage run -m unittest discover
  
  test-osx:
    macos:
      xcode: "11.2.1"
    environment:
      PYTHON: 3.6.5
      HOMEBREW_NO_AUTO_UPDATE: 1
    
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: check brew
          command: |
            brew --version
            brew install cmake

      - run:
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-xcode11.2.1

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode11.2.1
      
      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env
      
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *install-dependencies-template

      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *install-package-template

      - run: *run-tests-template

  build-win:
    executor:
      name: win/default
    
    environment:
      PYTHON: 3.6.5

    steps:
      - checkout

      - run:
          command: |
            choco install -y cmake
          shell: bash.exe  
      
      - run:
          command: |
            export PATH=$PATH:"C:\Program Files\CMake\bin"
            pip install -r requirements.txt
            python setup.py install
            
          shell: bash.exe
      

workflows:
  version: 2
  build-test:
    jobs:
      #- test-osx-3.6
      - test-linux2
      #- build-win