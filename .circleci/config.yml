version: 2.1

orbs:
  win: circleci/windows@2.2.0


jobs:
  
  test-linux: &full-test-template
    docker:
      - image: circleci/python:3.6-jessie
      
    working_directory: ~/repo

    steps:

      - checkout

      - run:
          name: install cmake 3.11
          command: |
            
            sudo apt-get install build-essential
            wget http://www.cmake.org/files/v3.11/cmake-3.11.4.tar.gz
            tar xf cmake-3.11.4.tar.gz
            cd cmake-3.11.4
            ./configure
            make
            sudo make install
            cmake --version
      
      - setup_remote_docker:
          docker_layer_caching: true
      
      - run:
          name: create virtualenv
          command: |
            python -m virtualenv env
      
      - run: &install-dependencies-template
          name: install dependencies
          command: |
            . env/bin/activate 
            python --version
            pip install -r requirements.txt
  
      - run: &install-package-template
          name: install package
          command: |
            . env/bin/activate
            python setup.py install

      - run: &run-tests-template
          name: run unittests
          command: |
            . env/bin/activate
            python --version
            coverage run -m unittest discover
  
  test-osx:
    macos:
      xcode: "11.2.1"
    environment:
      PYTHON: 3.6.5
      HOMEBREW_NO_AUTO_UPDATE: 1
    
    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: check brew
          command: |
            brew --version
            brew install cmake

      - run:
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-xcode11.2.1

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode11.2.1
      
      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env
      
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *install-dependencies-template

      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *install-package-template

      - run: *run-tests-template

  build:
    executor:
      name: win/default
    
    steps:
      - run:
          command: echo hello && echo world
          shell: bash.exe


workflows:
  version: 2
  build-test:
    jobs:
      #- test-osx-3.6
      #- test-3.6
      - build